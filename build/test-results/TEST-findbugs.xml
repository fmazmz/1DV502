<?xml version="1.0" encoding="utf-8"?>
<testsuite package="org.spotbugs" time="0" tests="4" errors="4" name="findbugs">
<testcase time="0" name="assignmenttwo/solarsystem/Moon.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 19-57 
Exception thrown in class assignmenttwo.solarsystem.Moon at new 
  assignmenttwo.solarsystem.Moon(String, int, double) will leave the 
  constructor. The object under construction remains partially initialized 
  and may be vulnerable to Finalizer attacks. 
Be wary of letting constructors throw exceptions. 
Classes that throw exceptions in their constructors are vulnerable to 
  Finalizer attacks 
 
A finalizer attack can be prevented, by declaring the class final, using an 
  empty finalizer declared as final, or by a clever use of a private 
  constructor. 
 
See SEI CERT Rule OBJ-11 for more information.
----------------
]]></failure>
</testcase><testcase time="0" name="assignmenttwo/solarsystem/Planet.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 12-101 
Exception thrown in class assignmenttwo.solarsystem.Planet at new 
  assignmenttwo.solarsystem.Planet(String, int, double) will leave the 
  constructor. The object under construction remains partially initialized 
  and may be vulnerable to Finalizer attacks. 
Be wary of letting constructors throw exceptions. 
Classes that throw exceptions in their constructors are vulnerable to 
  Finalizer attacks 
 
A finalizer attack can be prevented, by declaring the class final, using an 
  empty finalizer declared as final, or by a clever use of a private 
  constructor. 
 
See SEI CERT Rule OBJ-11 for more information.
----------------
]]></failure>
</testcase><testcase time="0" name="assignmenttwo/refactoredsolitares/HeavenlyBody.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 17-84 
Exception thrown in class assignmenttwo.refactoredsolitares.HeavenlyBody at 
  new assignmenttwo.refactoredsolitares.HeavenlyBody(String, int) will 
  leave the constructor. The object under construction remains partially 
  initialized and may be vulnerable to Finalizer attacks. 
Be wary of letting constructors throw exceptions. 
Classes that throw exceptions in their constructors are vulnerable to 
  Finalizer attacks 
 
A finalizer attack can be prevented, by declaring the class final, using an 
  empty finalizer declared as final, or by a clever use of a private 
  constructor. 
 
See SEI CERT Rule OBJ-11 for more information.
----------------
]]></failure>
</testcase><testcase time="0" name="assignmenttwo/solarsystem/HeavenlyBody.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 7-93 
Exception thrown in class assignmenttwo.solarsystem.HeavenlyBody at new 
  assignmenttwo.solarsystem.HeavenlyBody(String, int) will leave the 
  constructor. The object under construction remains partially initialized 
  and may be vulnerable to Finalizer attacks. 
Be wary of letting constructors throw exceptions. 
Classes that throw exceptions in their constructors are vulnerable to 
  Finalizer attacks 
 
A finalizer attack can be prevented, by declaring the class final, using an 
  empty finalizer declared as final, or by a clever use of a private 
  constructor. 
 
See SEI CERT Rule OBJ-11 for more information.
----------------
]]></failure>
</testcase></testsuite>